apiVersion: 1
groups:
  - orgId: 1
    name: rules
    folder: alerts
    interval: 1m
    rules:
      - uid: node-temperature
        title: Node Temperature
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              editorMode: builder
              exemplar: false
              expr: node_thermal_zone_temp > 60
              format: table
              hide: false
              instant: true
              intervalMs: 1000
              legendFormat: __auto
              maxDataPoints: 43200
              range: false
              refId: A
        noDataState: OK
        execErrState: Error
        for: 5m
        annotations:
          summary: Node temperature is getting to hot
          description: 'Node temperature is getting to hot for {{ $labels.instance }}'
        labels:
          receiver: gotify
        isPaused: false
      - uid: argo-cd-app-sync
        title: Argo CD app sync
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              editorMode: builder
              exemplar: false
              expr: argocd_app_info{sync_status!="Synced"} != 0
              format: table
              hide: false
              instant: true
              intervalMs: 1000
              legendFormat: __auto
              maxDataPoints: 43200
              range: false
              refId: A
        noDataState: OK
        execErrState: Error
        for: 5m
        annotations:
          summary: Sync status of Argo CD applications
          description: 'Argo CD application {{ $labels.name }} is out of sync'
        labels:
          receiver: gotify
        isPaused: false
      - uid: argo-cd-app-health
        title: Argo CD app health
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              editorMode: builder
              exemplar: false
              expr: argocd_app_info{health_status!="Healthy"} != 0
              format: table
              hide: false
              instant: true
              intervalMs: 1000
              legendFormat: __auto
              maxDataPoints: 43200
              range: false
              refId: A
        noDataState: OK
        execErrState: Error
        for: 5m
        annotations:
          summary: Health status of Argo CD applications
          description: 'Argo CD application {{ $labels.name }} is not healthy'
        labels:
          receiver: gotify
        isPaused: false
      - uid: pod-unhealthy
        title: Pod unhealthy
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              editorMode: builder
              exemplar: false
              expr: sum by(namespace, pod) (kube_pod_status_phase{phase=~"Failed|Pending|Unknown"}) != 0
              format: table
              hide: false
              instant: true
              intervalMs: 1000
              legendFormat: __auto
              maxDataPoints: 43200
              range: false
              refId: A
        noDataState: OK
        execErrState: Error
        for: 5m
        annotations:
          summary: Kubernetes Pod not healthy
          description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} is not healthy'
        labels:
          receiver: gotify
        isPaused: false
      - uid: pod-crash-looping
        title: Pod is crash looping
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              editorMode: builder
              exemplar: false
              expr: max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff"}[1m]) != 0
              format: table
              hide: false
              instant: true
              intervalMs: 1000
              legendFormat: __auto
              maxDataPoints: 43200
              range: false
              refId: A
        noDataState: OK
        execErrState: Error
        for: 5m
        annotations:
          summary: Kubernetes Pod is crash looping
          description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping'
        labels:
          receiver: gotify
        isPaused: false
      - uid: update-available
        title: Update available
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              disableTextWrap: false
              editorMode: builder
              expr: file_exists{file=~"/.*/dietpi/.*"} != 0
              format: table
              fullMetaSearch: false
              includeNullMetadata: true
              instant: true
              intervalMs: 1000
              legendFormat: __auto
              maxDataPoints: 43200
              range: false
              refId: A
        noDataState: OK
        execErrState: Error
        for: 5m
        annotations:
          summary: Update available
          description: 'Update for {{ $labels.instance }} available'
        labels:
          receiver: gotify
        isPaused: false
