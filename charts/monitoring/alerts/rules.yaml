apiVersion: 1
groups:
  - orgId: 1
    name: rules
    folder: alerts
    interval: 1m
    rules:
      - uid: node-temperature
        title: Node Temperature
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              expr: max_over_time(node_thermal_zone_temp[5m]) > 60
              format: table
              range: true
              refId: A
        noDataState: OK
        execErrState: Error
        for: 10m
        annotations:
          summary: Node temperature warning
          description: 'Node {{ $labels.instance }} temperature above 60Â°C'
        labels:
          severity: warning
          receiver: gotify
        isPaused: false

      - uid: argo-cd-app-sync
        title: Argo CD App Out of Sync
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              expr: argocd_app_info{sync_status!="Synced"} != 0
              format: table
              instant: true
              refId: A
        noDataState: OK
        execErrState: Error
        for: 5m
        annotations:
          summary: Argo CD app not synced
          description: 'Argo CD application {{ $labels.name }} is out of sync'
        labels:
          severity: warning
          receiver: gotify
        isPaused: false

      - uid: argo-cd-app-health
        title: Argo CD App Unhealthy
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              expr: argocd_app_info{health_status!="Healthy"} != 0
              format: table
              instant: true
              refId: A
        noDataState: OK
        execErrState: Error
        for: 5m
        annotations:
          summary: Argo CD app not healthy
          description: 'Argo CD application {{ $labels.name }} is not healthy (status={{ $labels.health_status }})'
        labels:
          severity: critical
          receiver: gotify
        isPaused: false

      - uid: pod-unhealthy
        title: Pod Unhealthy
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              expr: sum by(namespace, pod, phase) (kube_pod_status_phase{phase=~"Failed|Pending|Unknown"}) > 0
              format: table
              instant: true
              refId: A
        noDataState: OK
        execErrState: Error
        for: 5m
        annotations:
          summary: Kubernetes Pod unhealthy
          description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} is in phase {{ $labels.phase }}'
        labels:
          severity: warning
          receiver: gotify
        isPaused: false

      - uid: pod-crash-looping
        title: Pod CrashLoopBackOff
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 600
              to: 0
            datasourceUid: prometheus
            model:
              expr: max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff"}[5m]) > 0
              format: table
              range: true
              refId: A
        noDataState: OK
        execErrState: Error
        for: 2m
        annotations:
          summary: Kubernetes Pod crash looping
          description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping'
        labels:
          severity: critical
          receiver: gotify
        isPaused: false

      - uid: update-available
        title: Update Available
        condition: A
        data:
          - refId: A
            relativeTimeRange:
              from: 3600
              to: 0
            datasourceUid: prometheus
            model:
              expr: last_over_time(file_exists{file=~"/.*/dietpi/.*"}[1h]) != 0
              format: table
              instant: true
              refId: A
        noDataState: OK
        execErrState: Error
        for: 15m
        annotations:
          summary: System update available
          description: 'Update for {{ $labels.instance }} available'
        labels:
          severity: info
          receiver: gotify
        isPaused: false
