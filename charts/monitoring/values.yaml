kube-prometheus-stack:
  crds:
    enabled: true
    upgradeJob:
      enabled: true
      forceConflicts: true
  alertmanager:
    enabled: true
  grafana:
    defaultDashboardsTimezone: Europe/Berlin
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
      hosts:
        - grafana.192-168-178-31.sslip.io
    alerting:
      contactpoints.yaml:
        apiVersion: 1
        contactPoints:
          - orgId: 1
            name: apprise
            receivers:
              - uid: apprise
                type: webhook
                settings:
                  url: http://apprise.apprise.svc.cluster.local/notify/apprise
                  httpMethod: POST
                  payload:
                    template: |-
                      {{`{{ define "apprise.custom.payload" -}}`}}
                      {{`  {{ coll.Dict`}}
                      {{`  "title" (printf "%s %s"`}}
                      {{`     (tmpl.Inline "{{ if eq .Status \"resolved\" }}‚úÖ{{ else if eq .Status \"firing\" }}üî•{{ else }}‚ÑπÔ∏è{{ end }}" . )`}}
                      {{`     (tmpl.Exec "default.title" . ))`}}
                      {{`  "body" (tmpl.Exec "default.message" . )`}}
                      {{`  "tag" "alerts"`}}
                      {{`  | data.ToJSONPretty " "}}`}}
                      {{`{{- end }}`}}
                      {{`{{ template "apprise.custom.payload" . }}`}}
        policies:
          - orgId: 1
            receiver: apprise
            routes:
              - receiver: apprise
                matchers:
                  - receiver = "apprise"
              - receiver: apprise
                matchers:
                  - severity =~ "info|warning|critical"
            repeat_interval: 10h
    sidecar:
      alerts:
        enabled: true
  kubeApiServer:
    enabled: false
  kubelet:
    enabled: true
  kubeControllerManager:
    enabled: false
  coreDns:
    enabled: false
  kubeDns:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeProxy:
    enabled: false
  kubeStateMetrics:
    enabled: true
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      serviceMonitorNamespaceSelector:
        matchLabels:
          export-prometheus-metrics: "true"
      maximumStartupDurationSeconds: 900

file-exporter:
  enabled: true

apt-exporter:
  enabled: true
